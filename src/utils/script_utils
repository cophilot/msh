#!/bin/bash

###START###

# Create a new script
# $1 - The directory to create the script in
# $2 - The name of the script
# $3 (optional) - The description of the script
# $4 (optional) - If set to true, add a manual to the script
# $5 (optional) - The content of the script
# $6 (optional) - The content of the script
# $7 (optional) - The content of the script
# $8 (optional) - The content of the script
function create_new_script() {
	sc_dir=$1
	sc_name=$2

	script_file="$sc_dir/$sc_name"
	if [ -f "$script_file" ]; then
		log_e "The script '$sc_name' already exists"
		myexit 1
	fi

	touch $script_file
	echo "#!/bin/bash" >$script_file

	description="This is the $sc_name script"
	if [ -n "$3" ]; then
		description=$3
	fi
	description="#??$description"
	echo "$description" >>$script_file
	echo "#&&TAGS" >>$script_file

	if [ "$4" == "true" ]; then
		echo "###This is the manual for the $sc_name command..." >>$script_file
	fi

	echo "" >>$script_file
	if [ -n "$5" ]; then
		echo "$5" >>$script_file
	fi
	if [ -n "$6" ]; then
		echo "$6" >>$script_file
	fi
	if [ -n "$7" ]; then
		echo "$7" >>$script_file
	fi
	if [ -n "$8" ]; then
		echo "$8" >>$script_file
	fi
	chmod +x $script_file
}

# Create a new python script
# $1 - The directory to create the python script in
# $2 - The name of the python script
# $3 (optional) - The description of the script
# $4 (optional) - If set to true, add a manual to the script
# $5 (optional) - The content of the script
# $6 (optional) - The content of the script
# $7 (optional) - The content of the script
# $8 (optional) - The content of the script
function create_new_python_script() {
	sc_dir=$1
	sc_name=$2

	py_dir="$sc_dir/__py"

	mkdir -p $py_dir

	script_file="$py_dir/$sc_name.py"
	if [ -f "$script_file" ]; then
		log_e "The python script '$sc_name.py' already exists"
		myexit 1
	fi

	touch $script_file

	description="This is the $sc_name script"
	if [ -n "$3" ]; then
		description=$3
	fi
	description="##??$description"
	echo "$description" >$script_file
	echo "##&&TAGS" >>$script_file

	if [ "$4" == "true" ]; then
		echo "###This is the manual for the $sc_name command..." >>$script_file
	fi

	echo "" >>$script_file
	if [ -n "$5" ]; then
		echo "$5" >>$script_file
	fi
	if [ -n "$6" ]; then
		echo "$6" >>$script_file
	fi
	if [ -n "$7" ]; then
		echo "$7" >>$script_file
	fi
	if [ -n "$8" ]; then
		echo "$8" >>$script_file
	fi
	chmod +x $script_file
}

# Get all scripts available via msh
function get_all_scripts() {
	colls=$(get_all_collections "true")

	all_scripts=()
	for co in $colls; do
		if [ ! -d "$HOME_DIR/$co" ]; then
			continue
		fi
		if [ "$co" == "bin" ]; then
			continue
		fi

		coll_path="$HOME_DIR/$co"

		if [ -d "$coll_path/bin" ]; then
			coll_path="$coll_path/bin"
		fi

		coll_scripts=$(ls $coll_path)

		for script in $coll_scripts; do
			if [ -d "$coll_path/$script" ]; then
				continue
			fi
			if [[ $script == .* ]] || [[ $script == README* ]]; then
				continue
			fi
			all_scripts+=("$script/$co")
		done
	done

	echo ${all_scripts[@]}
}

# Run a script
# $1 - The script to run
function running_script {
	script_name=$1
	log "---"
	read -p "Do you want to run the script? (Y/n): " answer

	if [ "$answer" == "n" ] || [ "$answer" == "N" ]; then
		return
	fi

	read -p "Arguments: " args
	log "---"
	$script_name $args
}

# Resolve the absolute path of a script by its name with a
# $1 - The name of the script
function resolve_script_name_with_py {
	file_path=$(resolve_script_name $1)

	content=$(cat $file_path)
	if [[ $content == *"@@@MSH-PYTHON@@@"* ]]; then

		base_name=$(basename $file_path)
		py_base_name="__py/$base_name.py"

		py_file_path=${file_path//$base_name/$py_base_name}
		if [ -f $py_file_path ]; then
			echo $py_file_path
			return
		fi
	fi

	echo $file_path
}

# Resolve the absolute path of a script by its name
# $1 - The name of the script
function resolve_script_name {
	require_dir $HOME_DIR
	script_name=$1

	if [ -z "$script_name" ]; then
		log_e "INTERNAL: script-name is not defined in 'resolve_script_name'"
		myexit 1
	fi

	all_scripts=$(get_all_scripts)

	for script in $all_scripts; do
		script=(${script//\// })
		co=${script[1]}
		script=${script[0]}

		if [ "$script" != "$script_name" ]; then
			continue
		fi

		if [ -f "$HOME_DIR/$co/$script" ]; then
			echo "$HOME_DIR/$co/$script"
			return
		fi

		if [ -f "$HOME_DIR/$co/bin/$script" ]; then
			echo "$HOME_DIR/$co/bin/$script"
			return
		fi
	done

	if command -v "$script_name" &>/dev/null; then
		file_location=$(which $script_name)
		if [[ $file_location == $HOME_DIR* ]]; then
			echo $file_location
			return
		fi
	fi

	echo ""
}

###END###
