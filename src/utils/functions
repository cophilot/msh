#!/bin/bash

###START###

# Check if the function exists and run it. If it does exist, exit the application
# $1 - The function to run
# $2 - The arguments to pass to the function
function dynamic_run_and_exit() {
	if declare -f $1 >/dev/null; then
		$1 $2
		myexit 0
	fi
}

# Handle the development mode ###DEV-MODE###
function handle_dev_mode() { ###DEV-MODE###
	HOME_DIR="$(pwd)/.myshell"  ###DEV-MODE###
	mkdir -p .myshell           ###DEV-MODE###
}                            ###DEV-MODE###

# Check if a command exists. If it does, exit the application
function check_if_command_exists() {
	if command -v "$1" &>/dev/null; then
		log_e "The command '$1' already exists"
		myexit 1
	fi
}

# Check if a directory exists if not exit
# $1 - The directory to check
function require_dir() {
	if [ ! -d "$1" ]; then
		log_e "Directory $1 does not exist"
		myexit 1
	fi
}

# Check if a file exists if not exit
# $1 - The file to check
function require_file() {
	if [ ! -f "$1" ]; then
		log_e "File $1 does not exist"
		myexit 1
	fi
}

# Check if git is installed. If not exit
function require_git() {
	if ! command -v git &>/dev/null; then
		log_e "Git is not installed"
		myexit 1
	fi
}

# Exit the application with the specified code
# $1 - The exit code
function myexit() {
	if [ "$1" -ne 0 ]; then
		echo "Run '$0 help' for more information"
	fi
	check_for_update
	exit $1
}

# Chek if an update is available and notify the user
function check_for_update() {
	curr_url="https://raw.githubusercontent.com/cophilot/msh/refs/heads/main/.phil-project"
	curr_version=$(curl -s $curr_url | grep "version=" | cut -d "=" -f 2)
	if [ -z "$curr_version" ]; then
		return
	fi

	if [ "$curr_version" != "$version" ]; then
		log ""
		log "New version available: $version -> $curr_version"
		log "Run 'msh-update' to update"
	fi
}

###END###
